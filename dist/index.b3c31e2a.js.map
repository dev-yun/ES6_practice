{"mappings":"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","sources":["Documents/ES6_practice/js/js-apply.js"],"sourcesContent":["// 1. Truthy : 참 같은 값\r\n// => Falsy가 아닌 나머지 모든 값\r\n\r\n// 2. Falsy : 거짓 같은 값\r\n// => null, false, \"\", NaN, undefined, 0, -0\r\n\r\n// 3. 삼항 연산자 : 조건 ? 참 : 거짓 으로 구성된 조건문\r\nconst a = 3;\r\nif (a >= 0){\r\n  console.log(\"양수\");\r\n} else{\r\n  console.log(\"음수\");\r\n}\r\n// 삼항 연산자로 표현하면\r\na >= 0 ? console.log(\"양수\") : console.log(\"음수\");\r\n\r\n// 삼항 연산자를 이용하여 truthy와 falsy를 판단 \r\nlet c = 1;\r\nconst result = c ? true : false;\r\nconsole.log(result);\r\n\r\n// 삼항 연산자를 이어 사용하는 방법 (4항 이상)\r\n// 조건 ? 참 : 조건 ? 참 : 거짓\r\n// 조건 ? 참 : 조건 ? 참 : 조건 ? 참 : 거짓 ... \r\n// 하지만 가독성이 떨어져 권장하진 않음\r\n\r\n// 4. 단락 회로 평가 : 논리 연산자를 활용한 방법\r\n// and 연산자 &&는 앞의 연산자가 false이면 뒤 연산자는 읽을 필요 없기 false\r\n// or 연산자 ||는 앞의 연산자가 true이면 뒤 연산자는 볼 필요없이 true\r\n\r\nconst getName1 = (person) => {\r\n  if (!person){\r\n    return \"객체가 아닙니다.\";\r\n  }\r\n  return person.name;\r\n}\r\n\r\nlet person1 = {name : \"김나\"};\r\nconst name1 = getName1(person1);\r\nconsole.log(name1);\r\n\r\n// person1이 falsy일 경우 \"객체가 아닙니다.\"\r\n// truthy일 경우 person.name을 반환하는 코드인데 \r\n// 단란 회로 평가를 이용하여 getName1을 더 간단하게 줄일 수 있다.\r\nconst getName2 = (person) => {\r\n  const name = person && person.name;   // person이 falsy할때 false, truthy할때 person.name 반환 \r\n  return name || \"객체가 아닙니다.\";    // name이 truthy할때 name값, falsy할때 \"객체가 아닙니다\" 반환 \r\n}\r\nlet person2 = null;\r\nconst name3 = getName2(person2);\r\nconsole.log(name3);\r\n\r\n// 5. 조건문을 객체를 통해 간단히 구현\r\n// 각 나라의 대표음식들을 return해주는 함수를 작성할때\r\nconst getFood = (representativFood) => {\r\n  if (representativFood === \"한국\") return \"비빔밥\";\r\n  if (representativFood === \"일본\") return \"초밥\";\r\n  if (representativFood === \"미국\") return \"스테이크\";\r\n  if (representativFood === \"중국\") return \"마라탕\";\r\n  if (representativFood === \"베트남\") return \"쌀국수\";\r\n  return \"카테고리에 없는 국가입니다.\";\r\n}\r\n\r\nconsole.log(getFood(\"한국\"));\r\nconsole.log(getFood(\"러시아\"));\r\n\r\n// 위의 코드를 객체와 단락 회로 평가를 이용하면 더 간단하게 구현 가능\r\nconst nationFoods = {\r\n  한국 : \"비빔밥\",\r\n  일본 : \"초밥\",\r\n  미국 : \"스테이크\",\r\n  중국 : \"마라탕\",\r\n  베트남 : \"쌀국수\",\r\n} \r\n\r\nconst getNationFood = (representativFood) => {\r\n  return nationFoods[representativFood] || \"카테고리에 없는 국가입니다.\";\r\n};\r\n\r\nconsole.log(getNationFood(\"미국\"));\r\nconsole.log(getNationFood(\"인도\"));\r\n\r\n// 6. 비 구조화 할당 \r\nvar arr3 = [\"one\", \"two\", \"three\"];\r\n// 비구조화 할당 없이 변수에 할당\r\nvar one = arr3[0];\r\nvar two = arr3[1];\r\nvar three = arr3[2];\r\nconsole.log(one, two, three);\r\n// 비구조화 할당 사용\r\nvar [three, two, one] = arr3;\r\nconsole.log(one, two, three);\r\n// 비 구조화 할당을 더 간략하게 사용\r\nvar [one, two, three, four] = [\"one\", \"two\", \"three\", \"four\"];\r\nconsole.log(one, two, three, four);\r\n// 비 구조화 할당을 사용하면 swap을 간단하게 구현 가능\r\nvar x = 10;\r\nvar y = 20;\r\n// 비 구조화를 사용하지 않을 경우\r\nvar swap = x;\r\nvar x = y;\r\nvar y = swap;\r\nconsole.log(x, y);\r\n// 비 구조화를 사용할 경우\r\n[x, y] = [y, x];\r\nconsole.log(x,y);\r\n\r\n// 비 구조화 할당은 객체에도 이용 가능\r\nvar object1 = {one: \"one\", two:\"two\", three:\"three\"};\r\nvar one = object1.one;\r\nvar two = object1.two;\r\nvar three = object1.three;\r\nconsole.log(one, two, three);\r\n// 비 구조화 사용시\r\nvar {one, two, three} = object1;\r\nconsole.log(one, two, three);\r\n// 객체의 비 구조화 할당 사용시 key 값을 기준으로 할당 받아 변수명이 강제되는 경우가 있는데\r\n// key : 임의의 변수명으로 정의하여 사용가능\r\nvar {one : numOne, two : twotwo, three : luckyNum} = object1;\r\nconsole.log(numOne, twotwo, luckyNum);\r\n\r\n// 7. spread(스프레드)연산자 : 펼치는 연산자란 의미로 ...객체(배열) 형식\r\nconst cookie = {\r\n  base : \"cookie\",\r\n  madeIn : \"korea\",\r\n}\r\nconst chocochipCookie = {\r\n  base : \"cookie\",\r\n  madeIn : \"korea\",\r\n  toping : \"chocochip\",\r\n}\r\nconst cheeseCookie = {\r\n  base : \"cookie\",\r\n  madeIn : \"korea\",\r\n  toping : \"cheese\",\r\n}\r\n// 계속 base, madeIn 프로퍼티가 중복됨 => spread 연산자 사용\r\nconst chocochipCookie2 = {\r\n  ...cookie,\r\n  toping : \"chocochip\",\r\n}\r\nconsole.log(chocochipCookie);\r\nconsole.log(chocochipCookie2);"],"names":[],"version":3,"file":"index.b3c31e2a.js.map","sourceRoot":"/__parcel_source_root/"}